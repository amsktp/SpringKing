<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.edu.member">

	<sql id="search">
	  <choose>
		<!-- 검색옵션이 전체일 경우 -->
        	<when test="searchOption == 'all'">
        		WHERE MNAME LIKE '%'||#{keyword}||'%'
        		OR EMAIL LIKE '%'||#{keyword}||'%'
        	</when>
		<!-- 전체 검색이 아닐경우 -->
        	<otherwise>
				WHERE ${searchOption} LIKE '%'||#{keyword}||'%'
        	</otherwise>
        </choose>
	</sql>

<resultMap type="com.edu.member.model.MemberDto" 
      id="memberResultMap">
      <id column="MNO" property="no"/>
      <result column="MNAME" property="name"/>
      <result column="EMAIL" property="email"/>
      <result column="PWD" property="password"/>
      <result column="CRE_DATE" property="createdDate"
         javaType="java.util.Date"/>
      <result column="MOD_DATE" property="modifiedDate"
         javaType="java.util.Date"/>
   </resultMap>
   
   <resultMap type="com.edu.member.model.MemberFileDto" 
      id="memberFileResultMap">
      <result column="MNO" property="no"/>
      <result column="MNAME" property="name"/>
      <result column="EMAIL" property="email"/>
      <result column="PWD" property="password"/>
      <result column="CRE_DATE" property="createdDate"
         javaType="java.util.Date"/>
      <result column="MOD_DATE" property="modifiedDate"
         javaType="java.util.Date"/>
      
      <result column="IDX"                property="idx"   />
      <result column="PARENT_SEQ"          property="parentSeq"   />
      <result column="ORIGINAL_FILE_NAME"   property="originalFileName"   />
      <result column="STORED_FILE_NAME"     property="storedFileName"   />
      <result column="FILE_SIZE"            property="fileSize"   />
      <result column="CRE_DATE"             property="creDate"
         javaType="java.util.Date"/>   
   </resultMap>
	
<!-- 	파일이 있을 때 -->
	<select id="memberSelectList" parameterType="map"
			resultMap="memberFileResultMap">
			
		SELECT MF.MNO, MF.EMAIL, MF.MNAME, MF.CRE_DATE, MF.ORIGINAL_FILE_NAME
		FROM (
		    SELECT ROWNUM ROWN, M.MNO, M.EMAIL, M.MNAME, M.CRE_DATE, M.ORIGINAL_FILE_NAME
		    FROM(
		        SELECT MEMBER.MNO, MEMBER.EMAIL, MEMBER.MNAME, 
	            MEMBER.CRE_DATE, TB_FILE.ORIGINAL_FILE_NAME 
		        FROM MEMBER LEFT OUTER JOIN TB_FILE
		        ON MEMBER.MNO = TB_FILE.PARENT_SEQ
				<include refid="search"></include>
		        ORDER BY MNO DESC
		    ) M
		) MF
		WHERE (ROWN BETWEEN #{start} AND #{end})

		
	</select>
	
<!-- 	파일이 없을때 -->
<!-- 	<select id="memberSelectList" parameterType="map" -->
<!-- 			resultMap="memberResultMap"> -->
			
<!-- 	SELECT MNO, EMAIL, MNAME, CRE_DATE -->
<!-- 	FROM ( -->
<!--     	SELECT ROWNUM ROWN, M.MNO, M.EMAIL, M.MNAME, M.CRE_DATE -->
<!--     	FROM( -->
<!--         	SELECT MNO, EMAIL, MNAME, CRE_DATE -->
<!--         	FROM MEMBER -->
<!--         	ORDER BY MNO DESC -->
<!--         	) M -->
<!--     	) MEMBER -->
<!-- 	WHERE ROWN BETWEEN #{start} AND #{end} -->
		
<!-- 	</select> -->

	<select id="memberExist" parameterType="map"
			resultMap="memberResultMap">
		SELECT MNAME , EMAIL, MNO
		
		FROM MEMBER
		WHERE EMAIL = #{email}
		AND PWD = #{pwd}
	</select>

	<insert id="memberInsertOne" parameterType="memberDto"
		useGeneratedKeys="true" keyProperty="no">
	
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			SELECT MEMBER_MNO_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO MEMBER
		VALUE(MNO, EMAIL, PWD
			, MNAME, CRE_DATE, MOD_DATE)
		VALUES(#{no}, #{email}, #{password}
			, #{name}, SYSDATE, SYSDATE)
			
	</insert>
	
	<delete id="memberDeleteOne" parameterType="int">
		DELETE FROM MEMBER
		WHERE MNO = #{mno}
	</delete>
<!-- 	업데이트 -->
	
	<select id="memberSelectOne" parameterType="int"
			resultMap="memberResultMap">
			
		SELECT MNO, EMAIL, MNAME, CRE_DATE, PWD
		FROM MEMBER
		WHERE MNO = #{no}
	</select>
	
	<update id="memberUpdateOne" parameterType="memberDto">
		UPDATE MEMBER
		
		<set>
			<if test="email != ''">
				EMAIL = #{email},
			</if>
			<if test="name != ''">
				MNAME = #{name},
			</if>
			<if test="password != ''">
				PWD = #{password},
			</if>
			MOD_DATE=SYSDATE
		</set>
		WHERE MNO = #{no}
	</update>
	
	<select id="memberSelectTotalCount" parameterType="map" resultType="int">
	
<!-- 		SELECT COUNT(*) -->
<!-- 		FROM MEMBER -->
		
		SELECT COUNT(*)
		FROM MEMBER
		<include refid="search"></include>


	</select>
	
	<insert id="insertFile" parameterType="map">
	
		INSERT INTO TB_FILE
		
		VALUE(
			IDX, PARENT_SEQ, ORIGINAL_FILE_NAME, 
			STORED_FILE_NAME, FILE_SIZE, CRE_DATE)
		
		VALUES(
			TB_FILE_IDX_SEQ.nextval, #{parent_seq}, #{original_file_name}, 
			#{stored_file_name}, #{file_size}, SYSDATE)
	</insert>
	
	<select id="fileSelectList" parameterType="map"
		 resultType="map">
	
			SELECT IDX, ORIGINAL_FILE_NAME,
				 STORED_FILE_NAME, ROUND(FILE_SIZE/1024,1) FILE_SIZE
			FROM TB_FILE
			WHERE PARENT_SEQ=${no}
	
	</select>
	
	<delete id="fileDelete" parameterType="map">
		DELETE FROM TB_FILE
		WHERE PARENT_SEQ = ${parentSeq}
	</delete>
	
	<select id="fileSelectStoredFileName" parameterType="map"
		resultType="map">
		
		SELECT IDX, STORED_FILE_NAME 
		FROM TB_FILE
		WHERE PARENT_SEQ = ${no}
		
	</select>
</mapper>